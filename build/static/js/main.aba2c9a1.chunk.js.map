{"version":3,"sources":["helpers.js","api.js","components/Navbar.js","App.js","components/Home.js","router.js","components/Pagination.js","components/SelectOptions.js","components/Logs.js","components/LogIn.js","components/Result.js","components/Register.js","components/NotFound.js","serviceWorker.js","index.js"],"names":["alertConfigs","position","effect","beep","timeout","API","axios","create","baseURL","interceptors","response","use","message","data","Alert","success","Promise","resolve","error","status","Cookies","remove","reject","APIHelper","get","path","then","catch","post","Object","objectSpread","token","username","Navbar","homeRedirect","window","location","replace","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","onClick","this","Component","App","Navbar_Navbar","props","children","react_s_alert_default","stack","limit","html","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderModules","count","parsedResults","entries","modules","forEach","entry","push","keys","length","Coleta de Dados","Pré-processamento","Detecção de Maliciosos Conhecidos","Defesa/Proteção","Pré-processamento e Análise de Legitimidade","Conjugação de Pareceres sobre Legitimidade","Painel de Apoio","Complementação de Dados","Consultas Gerenciais","src","alt","router","home","login","register","result","arguments","undefined","logs","page","categories","btoa","JSON","stringify","Pagination","onPageEvent","event","key","parseInt","target","value","text","onChange","getRange","range","currentPage","totalPages","Math","ceil","total","Array","from","map","_this2","select","loading","SelectOptions","name","htmlFor","label","react_select_esm","assign","Logs","setState","search","state","skip","history","renderFilters","SelectOptions_SelectOptions","isMulti","options","categoriesOptions","field","defineProperty","statusOptions","disabled","getBadgeColor","renderResults","match","params","parse","atob","log","info","e","Humanize","intComma","Pagination_Pagination","LogIn","password","set","placeholder","Result","renderInfo","finish","log_id","_this3","Register","email","NotFound","Boolean","hostname","ReactDOM","render","react_router_dom","App_App","react_router","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aba2c9a1.chunk.js","sourcesContent":["import Alert from 'react-s-alert';\n\nconst alertConfigs = {\n    position: 'top-right',\n    effect: 'slide',\n    beep: false,\n    timeout: 4000\n};\n\nexport function alertError(message) {\n    Alert.error(message, alertConfigs);\n}\n\nexport function alertSuccess(message) {\n    Alert.success(message, alertConfigs)\n}","import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { alertError, alertSuccess } from './helpers';\n\nconst API = axios.create({baseURL: '/', timeout: 60 * 1000});\n\nAPI.interceptors.response.use(\n    (response) => {\n        if (response.data['msg']) alertSuccess(response.data['msg']);\n        return Promise.resolve(response)\n    },\n    (error) => {\n        if (error.response.status === 403) {\n            Cookies.remove('token');\n            Cookies.remove('username');\n        }\n        if (error.response.data['msg']) alertError(error.response.data['msg']);\n        return Promise.reject(error)\n    }\n);\n\nexport default class APIHelper {\n\n    static get = (path) => {\n        return new Promise((resolve, reject) => {\n            API.get(path)\n                .then(response => resolve(response.data))\n                .catch(error => reject(error.response.data))\n        });\n    };\n\n    static post = (path, data) => {\n        return new Promise((resolve, reject) => {\n            API.post(path, {token: Cookies.get('token'), username: Cookies.get('username'), ...data})\n                .then(response => resolve(response.data))\n                .catch(error => reject(error.response.data))\n        });\n    };\n}","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport APIHelper from \"../api\";\n\n\nexport default class Navbar extends Component {\n\n    homeRedirect = () => {\n        APIHelper.post('/api/users/logout', {}).then(() => {\n            Cookies.remove('token');\n            Cookies.remove('username');\n            window.location.replace('/')\n        })\n    };\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n                <a className=\"navbar-brand mx-4 navbar-l-sizer\" href=\"/\">EB-CyberDef</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link navbar-s-sizer\" href=\"/logs\">Logs</a>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav ml-auto nav-flex-icons\">\n                        {Cookies.get('username') ?\n                            <h5 className=\"text-white mb-0 mt-2\">Welcome {Cookies.get('username')}</h5> : null}\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" id=\"dropdownMenu\" data-toggle=\"dropdown\"\n                               aria-haspopup=\"true\" aria-expanded=\"false\"> {Cookies.get('username') ? null :\n                                <i className=\"fa fa-user fa-2x\"/>}\n                            </a>\n                            <div className=\"dropdown-menu dropdown-menu-right dropdown-default\"\n                                 aria-labelledby=\"dropdownMenu\">\n                                {Cookies.get('username') ?\n                                    <div><a className=\"dropdown-item\" href=\"javascript:void(0)\" onClick={this.homeRedirect}>Logout</a>\n                                    </div> : <div><a className=\"dropdown-item\" href=\"/login\">Log In</a>\n                                        <a className=\"dropdown-item\" href=\"/register\">Register</a></div>}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Alert from 'react-s-alert';\nimport Navbar from './components/Navbar'\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\nimport './App.css';\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <section>\n                <Navbar/>\n                <div className=\"p-4\">\n                    {this.props.children}\n                </div>\n                <Alert stack={{limit: 4}} html={true}/>\n            </section>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.modules = {\n            \"Coleta de Dados\": \"O módulo de coleta dos dados da rede deve ser capaz de extrair informações de diferentes fontes de dados (traces, logs e fluxos) em vários formatos.\",\n            \"Pré-processamento\": \"Este módulo compreende operações de tratamento e padronização dos dados de redes coletados, de forma a prepará-los para serem processados pelo sistema.\",\n            \"Detecção de Maliciosos Conhecidos\": \"Módulo responsável pela identificação dos dados maliciosos conhecidos (marcados como vermelhos, conforme figura 3.1) através de sua assinatura, isto é, características do código malicioso que podem ser percebidas sem a necessidade de mecanismos baseados em Inteligência Artificial e Aprendizado de Máquina. Este módulo, portanto, utiliza a técnica de detecção baseada em assinatura para realizar uma primeira filtragem dos logs coletados e pré-processados.\",\n            \"Defesa/Proteção\": \"Confirmado que determinado fluxo é malicioso, este módulo deve acionar medidas de defesa e/ou proteção para mitigar o problema. Tais medidas são denominadas Funções de Proteção. Estas funções podem ser especializadas para firewalls, servidores e roteadores. Um exemplo de medida preventiva que pode ser tomada é a adição de uma regra em um firewall com o objetivo de bloquear, exclusivamente, o fluxo malicioso. Conforme Visão Macro-Funcional da arquitetura, exposta na figura 3.1, observa-se que os logs de entrada para este módulo podem ser direcionados a ele em três momentos distintos do processo, após cada uma das etapas responsáveis por decidir se o fluxo é malicioso ou não. Além disso, este módulo é responsável por enviar um registro deste tráfego identificado como malicioso ao banco de dados responsável por manter estes logs (vermelho), de modo que estas informações sejam reutilizadas por outros módulos do sistema.\",\n            \"Pré-processamento e Análise de Legitimidade\": \"Este módulo compreende a execução de algoritmos inteligentes de análise de legitimidade dos dados, responsáveis por avaliar os padrões de dados, procurando classificá-los quanto ao seu potencial em se constituir um padrão malicioso. Ou seja, ele utiliza a técnica de detecção baseada no comportamento da aplicação, tendo como entrada os logs marcados como a ser avaliados (cinzas, aqueles que em um primeiro momento não foram identificados como maliciosos, de acordo com a figura 3.1) pelo módulo Detecção de Maliciosos Conhecidos. Cabe ressaltar que a execução dos algoritmos de análise de legitimidade pode ser precedida de diferentes processamentos que irão adequar (pré-processar) os dados conforme a necessidade de cada algoritmo.\",\n            \"Conjugação de Pareceres sobre Legitimidade\": \"Este módulo tem como propósito integrar os pareceres emitidos pelos algoritmos de legitimidade executados pelo módulo anterior, sobre os fluxos que ainda não se tem certeza de que se trata de dado não malicioso, a fim de obter um parecer único que reflita a impressão do sistema quanto à classificação do padrão analisado. Desta forma, o presente módulo deve classificar os dados em (i) certamente não maliciosos (verde), (ii) certamente maliciosos (vermelho) e (iii) suspeito (amarelo). Os dados marcados como verde devem ser enviados a um banco de dados responsável por armazenar tais fluxos não maliciosos. Os dados em vermelho serão enviados ao módulo Defesa/Proteção, abordado anteriormente. A última classificação deve refletir situações em que o sistema não consiga identificar com clareza se o dado é malicioso ou não, sendo este enviado ao módulo de Painel de Apoio.\",\n            \"Painel de Apoio\": \"O módulo de Painel de Apoio tem como objetivo apresentar a um analista humano (oráculo) os resultados da conjugação de pareceres de legitimidade dos fluxos marcados como suspeitos. Diante dos dados apresentados, o oráculo deverá opinar sobre a situação do padrão apresentado e indicar como tal padrão deverá ser tratado pelo sistema. É requisito da interface a ser desenvolvida apresentar também características (destes tráfegos suspeitos) consideradas relevantes ao processo decisório do analista, servindo como um auxílio à sua tomada de decisão. Além disso, caso o oráculo deseje, o painel de apoio poderá apresentar, com o mesmo intuito de ajudar no julgamento, dados externos ao sistema.\",\n            \"Complementação de Dados\": \"Módulo responsável por obter dados externos ao sistema que serão apresentados pelo Painel de Apoio. Conforme seu nome sugere, o módulo de complementação dos dados deve realizar buscas inteligentes cujo resultado possa ser útil para a avaliação do oráculo.\",\n            \"Consultas Gerenciais\": \"Este módulo compreende a exibição de relatórios e consultas gerenciais sobre o comportamento do sistema, permitindo monitorar a qualidade dos resultados encontrados e assim facilitar um eventual ajuste dos parâmetros do sistema a ser realizado na fase de experimentação/configuração.\"\n        }\n    }\n\n    renderModules = () => {\n        let count = 0;\n        let parsedResults = [];\n        Object.entries(this.modules).forEach(entry => {\n            count += 1;\n            parsedResults.push(\n                <div>\n                    <strong><h5>{entry[0]}</h5></strong>\n                    <h6>{entry[1]}</h6>\n                    {count === Object.keys(this.modules).length ? null : <hr/>}\n                </div>\n            )\n        });\n        return parsedResults\n    };\n\n    render() {\n        return (\n            <div className=\"p-4 card card-body\">\n                <h4>O EB-CyberDef é um projeto da seção de Engenharia de Computação do Instituto Militar de Engenharia e que tem como objetivo geral desenvolver um protótipo de um ambiente computacional para apoio à detecção e ao combate de comportamentos maliciosos no tráfego de redes de computadores.</h4>\n                <h4>A arquitetura do projeto é divida em 9 módulos, cada qual com sua função perante o funcionamento integral do sistema, conforme ilustrado na figura a seguir:</h4>\n                <br/>\n                <img className=\"img-size\" src=\"/static/project.png\" alt=\"EBCyber-Def Project\"/>\n                <br/>\n                <hr/>\n                {this.renderModules()}\n            </div>\n        );\n    }\n}\n","\nconst router = {\n    home: () => '/',\n    login: () => '/login',\n    register: () => '/register',\n    result: (id = null) => '/result/' + ((id === null) ? ':data([\\\\w\\\\-\\\\/+]+={0,2})?' : id),\n    logs: (page = null, status = null, categories = null) => '/logs/' + ((\n        page === null && status === null && categories === null) ? ':data([\\\\w\\\\-\\\\/+]+={0,2})?' :\n            btoa(JSON.stringify({page: page, status: status || [], categories: categories || []})))\n};\n\nexport default router;","import React, { Component } from 'react';\n\nexport default class Pagination extends Component{\n\n    onPageEvent = (event) => {\n        if (event.key === 'Enter' || event.type === 'click') {\n            let page = parseInt(event.target.value || event.target.text);\n            this.props.onChange(page)\n        }\n    };\n\n    getRange = () => {\n        let range = [];\n        let currentPage = this.props.page;\n        let totalPages = Math.ceil(parseInt(this.props.total) / this.props.limit);\n        if (totalPages <= 5) return Array.from(Array(totalPages).keys()).map(page => page + 1);\n        [1, 2, 3, 4, 5].forEach(page => {\n            if (currentPage === 1 || currentPage === 2)range.push(page);\n            else if (currentPage === totalPages || currentPage === totalPages - 1) range.push(totalPages - 5 + page);\n            else range.push(currentPage - 3 + page);\n        });\n        return range;\n    };\n\n    render(){\n        return (\n            <nav>\n                <ul className=\"pagination justify-content-center\">\n                    {this.getRange().map(page => {\n                        let select = (page === this.props.page) ? 'page-item active' : 'page-item';\n                        return(\n                            <li key={page} className={select}>\n                                <a href='javascript:void(0)' onClick={event => this.onPageEvent(event)}\n                                   className={'page-link' + (this.props.loading ? ' disable-link' : '')}>{page}</a>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </nav>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Select from 'react-select';\n\nexport default class SelectOptions extends Component {\n\n    onChange = (value) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.name, value);\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"form-group\">\n                <label className=\"col-form-label text-right\" htmlFor=\"tag\">{this.props.label}</label>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <Select {...this.props} onChange={this.onChange}/>\n                    </div>\n                    <div className=\"col\">{this.props.children}</div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport APIHelper from '../api';\nimport router from '../router';\nimport Pagination from './Pagination'\nimport SelectOptions from './SelectOptions';\nimport Humanize from '../../node_modules/humanize-plus/dist/humanize.js';\n\nexport default class Logs extends Component {\n\n    constructor(props) {\n        super(props);\n        this.limit = 20;\n        this.categoriesOptions = [{value: 'DNS', label: 'DNS'}];\n        this.statusOptions = [{value: 'valid', label: 'Valid'},\n            {value: 'danger', label: 'Danger'},\n            {value: 'pending', label: 'Pending'},\n            {value: 'warning', label: 'Warning'},\n            {value: 'processing', label: 'Processing'},\n            {value: 'inconclusive', label: 'Inconclusive'}];\n        if (this.props.match.params.data) {\n            try {\n                let data = JSON.parse(atob(this.props.match.params.data));\n                this.state = {page: data['page'], logs: [], categories: data['categories'], status: data['status'],\n                loading: true, total: 0, log: '', info: {}}\n            } catch (e) {\n                window.location.replace('/notFound');\n            }\n        } else {\n            this.state = {page: 1, logs: [], categories: [], status: [], loading: true, total: 0, log: '', info: {}}\n        }\n    }\n\n    componentDidMount() {\n        this.search(this.state.page)\n    }\n\n    onClick = () => {\n        this.setState({loading: true}, () => {\n            this.search(1);\n        })\n    };\n\n    search = (page) => {\n        let status = [];\n        let categories = [];\n        this.state.status.map(result => status.push(result.value));\n        this.state.categories.map(result => categories.push(result.value));\n        APIHelper.post('api/logs/search-logs', {'skip': (page - 1) * this.limit, 'limit': this.limit,\n            categories: categories, status: status})\n                .then(response => this.setState({\n                    logs: response['logs'], total: response['total'], loading: false, page: page}, () => {\n                    this.props.history.push(router.logs(this.state.page, this.state.status, this.state.categories))\n                }))\n                .catch(() => this.setState({logs: [], total: 0, loading: false, page: 1}))\n    };\n\n    renderFilters = () => {\n        return (\n            <div className=\"col-12 mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <SelectOptions name=\"categories\" label=\"Categories\" value={this.state.categories} isMulti={true}\n                                          options={this.categoriesOptions} onChange={\n                                              (field, value) => this.setState({[field]: value})}>\n                        </SelectOptions>\n                    </div>\n                    <div className=\"col-5\">\n                        <SelectOptions name=\"status\" label=\"Status\" value={this.state.status} isMulti={true}\n                                          options={this.statusOptions} onChange={\n                                              (field, value) => this.setState({[field]: value})}>\n                        </SelectOptions>\n                    </div>\n                    <div className=\"col-2\">\n                    {this.state.loading ? <button className=\"btn btn-secondary button-adjust pull-right\" disabled={true}>\n                            <i className=\"fa fa-refresh fa-spin\"/> Loading</button> :\n                        <button className=\"btn btn-secondary button-adjust pull-right\" onClick={this.onClick}>\n                            <i className=\"fa fa-search\"/> Search</button>}\n                    </div>\n                </div>\n            </div>\n        )\n    };\n\n    getBadgeColor = (status) => {\n        if (status === 'processing') {\n            return 'dark'\n        }\n        if (status === 'inconclusive') {\n            return 'secondary'\n        }\n        if (status === 'danger') {\n            return 'danger'\n        }\n        if (status === 'pending') {\n            return 'info'\n        }\n        if (status === 'valid') {\n            return 'success'\n        }\n        return 'warning'\n    };\n\n    renderResults = () => {\n        let parsedResults = [];\n        this.state.logs.map(data => {\n            parsedResults.push(\n                <a href={\"/result/\" + data['_id']} id={data['_id']}>\n                    <div className=\"alert list-info\">\n                        {data['domain']}\n                        <div className=\"pull-right\">\n                            <span className={\"badge badge-\" + this.getBadgeColor(data['status']) + \" ml-2\"}>{data['status']}</span>\n                        </div>\n                    </div>\n                </a>)});\n        return parsedResults\n    };\n\n    render() {\n        return (\n            <div className=\"p-4 card card-body\">\n                <div className=\"row mb-3\">\n                    {this.renderFilters()}\n                        <div className=\"col-12 mb-2\">\n                            <div className=\"row col-12 px-0 mx-0\">\n                                <div className=\"col-lg-5 px-0\"><hr/></div>\n                                <div className=\"col-lg-2 text-center\">\n                                    <small>Found <strong>{Humanize.intComma(this.state.total)}\n                                        </strong> result{this.state.total > 1 ? 's' : ''}\n                                    </small>\n                                </div>\n                                <div className=\"col-lg-5 px-0\"><hr/></div>\n                            </div>\n                            {this.state.total > 0 ? this.renderResults() : null}\n                            {this.state.total > this.limit ?\n                                <Pagination page={this.state.page} total={this.state.total} limit={this.limit}\n                                            onChange={page => this.search(page)}\n                                            loading={this.state.loading}/> : null}\n                        </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport APIHelper from '../api';\nimport Cookies from 'js-cookie';\n\nexport default class LogIn extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {username: null, password: null, loading: false}\n    }\n\n    login = () => {\n        this.setState({loading: true}, () => {\n            APIHelper.post('api/users/login', {'username': this.state.username,\n            'password': this.state.password})\n                .then((response) => {\n                    Cookies.set('token', response['token']);\n                    Cookies.set('username', response['username']);\n                    window.location.replace('/logs')\n                })\n                .catch(() => this.setState({loading: false}))\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"col-6 p-4 card card-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputUsername\">Username</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputUsername\" placeholder=\"Username\"\n                        value={this.state.username} onChange={\n                            (data) => this.setState({username: data.target.value})}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputPassword\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"\n                        value={this.state.password} onChange={\n                            (data) => this.setState({password: data.target.value})}/>\n                    </div>\n                    <div className=\"col-3 p-0\">\n                    {this.state.loading ? <button className=\"btn btn-secondary\" disabled={true}>\n                            <i className=\"fa fa-refresh fa-spin\"/> Logging</button> :\n                        <button className=\"btn btn-secondary\" onClick={this.login}>\n                            <i className=\"fa fa-search\"/> Log In</button>}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport APIHelper from '../api';\n\nexport default class Result extends Component {\n\n    constructor(props) {\n        super(props);\n        this.id = this.props.match.params.data;\n        this.state = {loading: true, info: {}}\n    }\n\n    componentDidMount() {\n        APIHelper.post('api/logs/get-log', {'log_id': this.id})\n            .then(response => this.setState({info: response, loading: false}))\n            .catch(() => this.setState({loading: false, info: false}))\n    }\n\n    renderInfo = () => {\n        let parsedResults = [];\n        Object.entries(this.state.info).forEach(entry => {\n            parsedResults.push(<div className=\"row col-12\">\n                <div className=\"col-12\"><br/></div>\n                <div className=\"col-1 pr-0\"><h5>{entry[0]}</h5></div>\n                <div className=\"col-11 px-0\"><hr/></div>\n            </div>);\n            let count = 0;\n            entry[1].map(data => {\n                count += 1;\n                parsedResults.push(<div className=\"col-1 m-0 pr-0\"><small><strong>{data[\"key\"]}</strong></small></div>);\n                {data[\"result\"] === null ? parsedResults.push(<div className=\"col-3 m-0 p-0\"><small>{data[\"value\"]}</small></div>) :\n                parsedResults.push(<div className=\"col-3 m-0 p-0\">\n                    <badge className={\"badge badge-\" + data[\"result\"]}>{data[\"value\"]}</badge></div>)}\n                if (count % 3 === 0) parsedResults.push(<div className=\"col-12\"><br/></div>);\n            });\n        });\n        return parsedResults\n    };\n\n    finish = (status) => {\n        APIHelper.post('api/logs/finish-log', {'log_id': this.id, 'status': status})\n                .then(() => window.location.replace(\"/logs\"))\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"row text-center\">\n                    <h3 className=\"col-12\">Log Details</h3>\n                </div>\n                <div>\n                    {this.state.loading ? <div className=\"text-center\">\n                        <div className=\"col-12\"><br/></div>\n                        <h3><i className=\"fa fa-refresh fa-spin\"/> Processing</h3></div> : (this.state.error ?\n                        <div className=\"text-center\">\n                            <div className=\"col-12\"><br/></div>\n                            <h3>Error while processing</h3></div> :\n                        <div className=\"row\">{this.renderInfo()}</div>)}\n                </div>\n                <div className=\"col-12 px-0\"><hr/></div>\n                {this.state.loading || !this.state.info ? null : <div className=\"row pull-right\">\n                    <div className=\"px-4\">\n                        <button type=\"button\"\n                                className=\"btn btn-danger-custom\" onClick={\n                            () => this.finish('danger')}>Danger</button></div>\n                    <div className=\"px-4\">\n                        <button type=\"button\"\n                                className=\"btn btn-secondary-custom\" onClick={\n                            () => this.finish('inconclusive')}>Inconclusive</button></div>\n                    <div className=\"px-4\">\n                        <button type=\"button\"\n                                className=\"btn btn-warning-custom\" onClick={\n                            () => this.finish('warning')}>Warning</button></div>\n                    <div className=\"px-4\">\n                        <button type=\"button\"\n                                className=\"btn btn-success-custom\" onClick={\n                            () => this.finish('valid')}>Valid</button></div>\n                </div>}\n            <br/>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport APIHelper from '../api';\n\nexport default class Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {username: null, email: null, password: null, token: null, loading: false}\n    }\n\n    login = () => {\n        this.setState({loading: true}, () => {\n            APIHelper.post('api/users/register', {'username': this.state.username, 'email': this.state.email,\n            'password': this.state.password, 'token': this.state.token})\n                .then(() => this.setState({username: null, email: null, password: null, token: null,\n                    loading: false}))\n                .catch(() => this.setState({loading: false}))\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"col-6 p-4 card card-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputUsername\">Username</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputUsername\" placeholder=\"Username\"\n                        value={this.state.username} onChange={\n                            (data) => this.setState({username: data.target.value})}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputEmail\">Email</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Enter email\"\n                        value={this.state.email} onChange={\n                            (data) => this.setState({email: data.target.value})}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputPassword\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"\n                        value={this.state.password} onChange={\n                            (data) => this.setState({password: data.target.value})}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"inputToken\">Token</label>\n                        <input type=\"password\" className=\"form-control\" id=\"inputToken\" placeholder=\"Token\"\n                        value={this.state.token} onChange={\n                            (data) => this.setState({token: data.target.value})}/>\n                    </div>\n                    <div className=\"col-3 p-0\">\n                    {this.state.loading ? <button className=\"btn btn-secondary\" disabled={true}>\n                            <i className=\"fa fa-refresh fa-spin\"/> Logging</button> :\n                        <button className=\"btn btn-secondary\" onClick={this.login}>\n                            <i className=\"fa fa-search\"/> Log In</button>}\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"center-title\">404</div>\n                <div className=\"center-subtitle\">PAGE NOT FOUND</div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Home from './components/Home';\nimport Logs from './components/Logs';\nimport LogIn from './components/LogIn';\nimport Result from './components/Result';\nimport Register from './components/Register';\nimport NotFound from './components/NotFound';\nimport router from './router'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App>\n            <Switch>\n                <Route path={router.home()} exact={true} component={Home} />\n                <Route path={router.logs()} exact={true} component={Logs} />\n                <Route path={router.login()} exact={true} component={LogIn} />\n                <Route path={router.result()} exact={true} component={Result} />\n                <Route path={router.register()} exact={true} component={Register} />\n                <Route path=\"/*\" component={NotFound} />\n            </Switch>\n        </App>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}